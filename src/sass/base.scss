// values
$m-auto: 0 auto;
$fixed: 990px;

// colors
$red-color: #cc2515;
$color-primary: $red-color;

// color variations primary
$color-primary-dark: darken($color-primary, 10);
$hover-primary: $color-primary-dark;


$blue-color: #40adff;
$color-secondary: $blue-color;

// color variations secondary
$color-secondary-transparent: rgba($color-secondary, .8);
$color-secondary-dark: darken($color-secondary, .8);
$hover-secondary: $color-secondary-dark;

// fonts
$ff-normal: Arial, Helvetica, sans-serif;
$ff-bold: "Arial Black", Gadget, sans-serif;

$fs-normal: 1em;

// images
$BASEPATH: '../../src/images/';


// mixins
@mixin transition($property, $time, $method, $delay){
	-webkit-transition: $property $time $method $delay;
	   -moz-transition: $property $time $method $delay;
	    -ms-transition: $property $time $method $delay;
	     -o-transition: $property $time $method $delay;
	        transition: $property $time $method $delay;
}

// border-radius
@mixin bdr($radius) {
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
	    -ms-border-radius: $radius;
	     -o-border-radius: $radius;
	        border-radius: $radius;
}

// border-radius-top
@mixin bdr-top($radius) {
	-webkit-border-radius-top: $radius;
	   -moz-border-radius-top: $radius;
	    -ms-border-radius-top: $radius;
	     -o-border-radius-top: $radius;
	        border-radius-top: $radius;
}

// box-shadow
@mixin bsd($x, $y, $blur, $color) {
	-webkit-box-shadow: $x $y $blur $color;
	   -moz-box-shadow: $x $y $blur $color;
	    -ms-box-shadow: $x $y $blur $color;
	     -o-box-shadow: $x $y $blur $color;
	        box-shadow: $x $y $blur $color;
}

// text-shadow
@mixin tsd($x, $y, $blur, $color) {
	-webkit-text-shadow: $x $y $blur $color;
	   -moz-text-shadow: $x $y $blur $color;
	    -ms-text-shadow: $x $y $blur $color;
	     -o-text-shadow: $x $y $blur $color;
	        text-shadow: $x $y $blur $color;
}

// translateY
@mixin translateY($value) {
	-webkit-transform: translateY($value);
	   -moz-transform: translateY($value);
	    -ms-transform: translateY($value);
	     -o-transform: translateY($value);
	        transform: translateY($value);
}

// skew
@mixin skew($value) {
	-webkit-transform: skew($value);
	   -moz-transform: skew($value);
	    -ms-transform: skew($value);
	     -o-transform: skew($value);
	        transform: skew($value);
}

// rotate
@mixin rotate($value) {
	-webkit-transform: rotate($value);
	   -moz-transform: rotate($value);
	    -ms-transform: rotate($value);
	     -o-transform: rotate($value);
	        transform: rotate($value);
}

// scale
@mixin scale($x, $y) {
	-webkit-transform: scale($x, $y);
	   -moz-transform: scale($x, $y);
	    -ms-transform: scale($x, $y);
	     -o-transform: scale($x, $y);
	        transform: scale($x, $y);
}

// animation
@mixin animation($nameAnimation, $time){
	-webkit-animation: $nameAnimation $time;
	   -moz-animation: $nameAnimation $time;
	    -ms-animation: $nameAnimation $time;
	     -o-animation: $nameAnimation $time;
	        animation: $nameAnimation $time;
}

// appearance
@mixin apr($value) {
	-webkit-appearance: $value;
	   -moz-appearance: $value;
	    -ms-appearance: $value;
	     -o-appearance: $value;
	        appearance: $value;
}

// linear-gradient
@mixin gradient($color, $colorLight) {
	/* fallback */
  background-color: $color;
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color), to($colorLight));
  background: -webkit-linear-gradient(bottom, $color, $colorLight);
  background:    -moz-linear-gradient(bottom, $color, $colorLight);
  background:     -ms-linear-gradient(bottom, $color, $colorLight);
  background:      -o-linear-gradient(bottom, $color, $colorLight);
  background:         linear-gradient(bottom, $color, $colorLight);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color', endColorstr='colorLight',GradientType=1 ); /* IE6-9 */
}